{"rules":[{"ruleBlockType":6000,"id":"02DFCEA0-758B-4EB3-9E18-10AF3D1103E0-1057-00000120640D1B61","objectID":"","abilityID":"64BBF633-626B-491E-A7C1-ECCDE5E1C2ED-1057-0000012063F0905D","name":"","parameters":[{"defaultValue":"","datum":{"type":7000,"block_class":"operator","description":"Game Starts"},"key":"","value":"","type":52}]},{"ruleBlockType":6000,"id":"4B2B3506-7E09-49B3-98EB-AC4377F3795D-1057-00000120640D9D87","abilityID":"6F70AB8B-1E4B-46B9-9A36-D2AA33A0FA89-1057-0000012063F78AAD","name":"","objectID":"","parameters":[{"datum":{"type":7015,"block_class":"operator","description":"Object is Cloned"},"defaultValue":"","key":"","value":"","type":52}]},{"ruleBlockType":6000,"id":"F00B8630-EAB5-4894-B905-640936676AEC-1057-00000120640DBF53","abilityID":"01AD3D66-91CC-4BBF-991E-FFD4DBB06526-1057-0000012063F7F142","name":"","objectID":"","parameters":[{"defaultValue":"","datum":{"type":7000,"block_class":"operator","description":"Game Starts"},"value":"","key":"","type":52}]},{"ruleBlockType":6000,"id":"FE2B82D0-F6D9-4EEF-9B89-619E8E2197EE-1057-00000120640DD01D","objectID":"","name":"","abilityID":"539E7C1B-B855-4D5C-B21F-D98481A4D763-1057-0000012063F91D0F","parameters":[{"datum":{"type":7015,"block_class":"operator","description":"Object is Cloned"},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"5EDC71EC-814A-4905-9AE6-AFB94A4107E4-1057-00000120640798B9","abilityID":"1F96F6CD-43D8-4F84-8051-E41E64B39129-1057-0000012063D9E7D6","objectID":"","name":"","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":7000,"block_class":"operator","description":"Game Starts"},"type":52}]},{"ruleBlockType":6000,"id":"C70106A3-F4BC-4183-BFAB-4BE2A456BC89-1057-00000120640C4B28","objectID":"","abilityID":"DDD1A8AE-D43E-411F-A5B2-761CB4A59E70-1057-0000012063EE1287","name":"","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"18651751-0438-4AB3-AE88-8B804486A350-330-00000017EEBE91C8","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"B0437C5A-8768-4A22-9D4E-7437DBF408DA-1057-000001206407FC39","objectID":"","name":"","abilityID":"90EFD948-7715-4E33-A464-11B9DA6A4DF0-1057-0000012063DC7257","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"7F7C6003-BDA1-4B96-B344-71C485D7C13F-1057-000001206407BB87","objectID":"","name":"","abilityID":"E94CD02C-15CA-4394-BBA6-DA2EEE611DC5-1057-0000012063DC151D","parameters":[{"datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"0","key":"=","type":42}]},"type":49}]},"defaultValue":"","value":"","key":"","type":52}]},{"ruleBlockType":6000,"id":"E59C126D-E335-4E50-ADE3-BF2A102E736D-1057-00000120640820E5","abilityID":"70CAF9B2-1942-4C6C-8BC4-23334C4FA800-1057-0000012063DC8C2C","objectID":"","name":"","parameters":[{"datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"1","key":"=","type":42}]},"type":49}]},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"5FDB5E32-9888-4E67-BB46-33651CCCCD19-1057-0000012064085F73","abilityID":"80978232-207F-45FE-82D5-48799C84D91C-1057-0000012063DC9711","name":"","objectID":"","parameters":[{"datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"2","key":"=","type":42}]},"type":49}]},"defaultValue":"","key":"","value":"","type":52}]},{"ruleBlockType":6000,"id":"15B176CB-C352-4599-8E21-A4D005804B5B-1057-0000012064089DA5","abilityID":"F2379DBE-478E-4CF7-A761-5ED8062764A5-1057-0000012063DCA1CB","objectID":"","name":"","parameters":[{"datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"3","key":"=","type":42}]},"type":49}]},"defaultValue":"","key":"","value":"","type":52}]},{"ruleBlockType":6000,"id":"26EE4E4B-E6E4-4A6D-99A7-3AD2D84F866C-1057-000001206408DBE1","abilityID":"26E2C5D6-0AFB-43AC-AC65-52DBAF41E813-1057-0000012063DCAC64","objectID":"","name":"","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"4","key":"=","type":42}]},"type":49}]},"type":52}]},{"ruleBlockType":6000,"id":"80D30831-A750-4C4B-A8CB-65E9B21F710C-1057-0000012064091A83","abilityID":"86038221-E12F-4D36-80EA-534280F0502D-1057-0000012063DCB6E3","objectID":"","name":"","parameters":[{"datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"5","key":"=","type":42}]},"type":49}]},"value":"","defaultValue":"","key":"","type":52}]},{"ruleBlockType":6000,"id":"B36BEAB0-E937-413C-9159-9AC0899C71DF-1057-0000012064095888","objectID":"","name":"","abilityID":"6A11F679-0143-4DF7-AB0A-C20034CBEBF8-1057-0000012063DCC196","parameters":[{"datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"6","key":"=","type":42}]},"type":49}]},"defaultValue":"","key":"","value":"","type":52}]},{"ruleBlockType":6000,"id":"2CBAC50F-D681-4A39-93BF-E14C31E60C99-1057-000001206409994A","objectID":"","abilityID":"B4DA2B0F-330A-4E46-8BEE-5B78FFA5AF10-1057-0000012063DCCC2B","name":"","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","type":42}]},"type":49}]},"type":52}]},{"ruleBlockType":6000,"id":"1C8CB478-A449-465B-AD04-D812F612D310-1057-000001206409ECF1","abilityID":"23E763BF-B184-4B22-A459-436B2023FA76-1057-0000012063DCD6D5","name":"","objectID":"","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"8","key":"=","type":42}]},"type":49}]},"type":52}]},{"ruleBlockType":6000,"id":"5082F153-A696-4304-9E57-B574819A8FA5-1057-00000120640A2BA6","abilityID":"48C29F27-E556-429B-BC98-5ECE1F3B5F36-1057-0000012063DCE187","objectID":"","name":"","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":42},{"defaultValue":"7","value":"9","key":"=","type":42}]},"type":49}]},"type":52}]},{"ruleBlockType":6000,"id":"5963EAEA-6C80-4E1E-A236-3A8AABEBD8CD-1057-00000120640E6E8F","objectID":"","abilityID":"FF11AB74-AFB0-40D6-827D-77FBF5E6AFE7-1057-000001206401F292","name":"","parameters":[{"defaultValue":"","value":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"key":"","type":52}]},{"ruleBlockType":6000,"id":"521EBF6B-5EC3-45CE-85A6-F14E6C4C7B29-1057-00000120640E48F0","abilityID":"686C5036-1731-4000-88F4-3E18EAF86CBF-1057-000001206401D0C1","name":"","objectID":"","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"defaultValue":"","value":"","key":"","type":52}]},{"ruleBlockType":6000,"id":"E14024BC-7BA5-4B66-B087-00AD2F27F474-1057-000001206407A8DE","objectID":"","name":"","abilityID":"0383A43F-C11F-4533-8B1D-A0638EF7EB17-1057-0000012063DBFACD","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","type":42},{"defaultValue":"7","value":"7","key":"=","type":42}]},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"A4A61FD1-52E7-4018-9178-DB0B8E2FF9EC-1057-00000120640AF7BA","objectID":"","name":"","abilityID":"8CD674EA-FB06-43F2-8880-B670168D533B-1057-0000012063E8204F","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"21DE1B68-8A4E-415D-AC12-7EBE34B3C083-244-00000014A1A37230","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"F7112A25-EE13-4B63-AC17-F726F9D40D76-1057-00000120640B3448","abilityID":"E481F0E3-9653-4214-A196-11C6D39FBF60-1057-0000012063EA38BF","name":"","objectID":"","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"21DE1B68-8A4E-415D-AC12-7EBE34B3C083-244-00000014A1A37230","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":52}]},{"ruleBlockType":6000,"id":"4D850BF7-3076-40AD-A7BB-65E10DE893BC-1057-00000120640DE032","abilityID":"40322C00-371A-442A-A9BA-D425E2023F78-1057-0000012063FF3AC3","objectID":"","name":"","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","type":42},{"defaultValue":"7","value":"7","key":"=","type":42}]},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"34D9FE60-FD54-4D66-A3AB-B6DBC2640B3B-1057-00000120640DF206","objectID":"","name":"","abilityID":"566FB462-7560-442D-8771-0F14CC261137-1057-0000012063FF6C59","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","type":42},{"defaultValue":"7","value":"7","key":"=","type":42}]},"defaultValue":"","value":"","key":"","type":52}]},{"ruleBlockType":6000,"id":"9BEA0F80-4112-4C0F-8AD4-6314E42A12E3-1057-00000120640E0417","abilityID":"2758A124-820A-4F68-86C6-4895DAA32DFC-1057-0000012063FFC0EA","name":"","objectID":"","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","type":42},{"defaultValue":"7","value":"7","key":"=","type":42}]},"type":52}]},{"ruleBlockType":6000,"id":"F174E980-82E2-49B6-8A23-A346CACFEA35-1057-00000120640E1595","objectID":"","name":"","abilityID":"02BF2609-7FF2-4AFC-8917-FF68204B925D-1057-0000012063FFFCC1","parameters":[{"datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","type":42},{"defaultValue":"7","value":"7","key":"=","type":42}]},"value":"","defaultValue":"","key":"","type":52}]},{"ruleBlockType":6000,"id":"B1F1FCF7-FC92-49C2-A38B-1C283F758009-1057-00000120640EFC07","abilityID":"9376EA68-83A5-4EF7-89F0-F465BC36BFB6-1057-00000120640278F3","objectID":"","name":"","parameters":[{"datum":{"type":7000,"block_class":"operator","description":"Game Starts"},"value":"","key":"","defaultValue":"","type":52}]},{"ruleBlockType":6000,"id":"0DA302A7-D5A3-4DDF-8278-CDE4BE32D85D-1057-00000120640F0E31","abilityID":"6844A289-E805-4137-A443-547C8C58E869-1057-000001206402AEE2","objectID":"","name":"","parameters":[{"datum":{"type":7015,"block_class":"operator","description":"Object is Cloned"},"value":"","key":"","defaultValue":"","type":52}]}],"customRules":[{"id":"8AE1DE6D-7D6D-4D68-9DB1-7F8C94925BFC-1057-0000012063C87A7A","name":"🕓 Clock BG","rules":["02DFCEA0-758B-4EB3-9E18-10AF3D1103E0-1057-00000120640D1B61","4B2B3506-7E09-49B3-98EB-AC4377F3795D-1057-00000120640D9D87"]},{"rules":["F00B8630-EAB5-4894-B905-640936676AEC-1057-00000120640DBF53","FE2B82D0-F6D9-4EEF-9B89-619E8E2197EE-1057-00000120640DD01D"],"id":"970DCF17-3651-4BDE-B83B-09484385B496-1057-0000012063C87C1A","name":"🕓 Clock Arms"},{"id":"11A74524-B009-4D6E-9EA5-69FEF1B614F1-1057-0000012063C87697","rules":["5EDC71EC-814A-4905-9AE6-AFB94A4107E4-1057-00000120640798B9","C70106A3-F4BC-4183-BFAB-4BE2A456BC89-1057-00000120640C4B28","B0437C5A-8768-4A22-9D4E-7437DBF408DA-1057-000001206407FC39","7F7C6003-BDA1-4B96-B344-71C485D7C13F-1057-000001206407BB87","E59C126D-E335-4E50-ADE3-BF2A102E736D-1057-00000120640820E5","5FDB5E32-9888-4E67-BB46-33651CCCCD19-1057-0000012064085F73","15B176CB-C352-4599-8E21-A4D005804B5B-1057-0000012064089DA5","26EE4E4B-E6E4-4A6D-99A7-3AD2D84F866C-1057-000001206408DBE1","80D30831-A750-4C4B-A8CB-65E9B21F710C-1057-0000012064091A83","B36BEAB0-E937-413C-9159-9AC0899C71DF-1057-0000012064095888","2CBAC50F-D681-4A39-93BF-E14C31E60C99-1057-000001206409994A","1C8CB478-A449-465B-AD04-D812F612D310-1057-000001206409ECF1","5082F153-A696-4304-9E57-B574819A8FA5-1057-00000120640A2BA6","5963EAEA-6C80-4E1E-A236-3A8AABEBD8CD-1057-00000120640E6E8F","521EBF6B-5EC3-45CE-85A6-F14E6C4C7B29-1057-00000120640E48F0","E14024BC-7BA5-4B66-B087-00AD2F27F474-1057-000001206407A8DE","A4A61FD1-52E7-4018-9178-DB0B8E2FF9EC-1057-00000120640AF7BA","F7112A25-EE13-4B63-AC17-F726F9D40D76-1057-00000120640B3448","4D850BF7-3076-40AD-A7BB-65E10DE893BC-1057-00000120640DE032","34D9FE60-FD54-4D66-A3AB-B6DBC2640B3B-1057-00000120640DF206","9BEA0F80-4112-4C0F-8AD4-6314E42A12E3-1057-00000120640E0417","F174E980-82E2-49B6-8A23-A346CACFEA35-1057-00000120640E1595"],"name":"🕓 Calculate Time"},{"rules":["B1F1FCF7-FC92-49C2-A38B-1C283F758009-1057-00000120640EFC07","0DA302A7-D5A3-4DDF-8278-CDE4BE32D85D-1057-00000120640F0E31"],"id":"7172FF08-290E-42B4-9FD5-90AF7BB1A0FA-1057-0000012063C878C6","name":"🕓 Clock Time"}],"abilities":[{"createdAt":560605483.27741504,"blocks":[{"block_class":"method","type":35,"description":"Wait","parameters":[{"defaultValue":"500","value":"0","key":"milliseconds","type":42}]},{"parameters":[{"defaultValue":"HSB(288,57,43)","value":"HSB(0,0,0)","key":"color","type":44},{"defaultValue":"10","value":"350","key":"width","type":43}],"block_class":"control","type":26,"controlScript":{"abilityID":"5C129A8A-E510-4F98-970D-0D41E05ACA9D-1057-0000012063F0A313"},"description":"Draw a Trail"},{"parameters":[{"defaultValue":"HSB(288,57,43)","value":"HSB(0,0,100)","key":"color","type":44},{"defaultValue":"10","value":"345","key":"width","type":43}],"block_class":"control","type":26,"description":"Draw a Trail","controlScript":{"abilityID":"CE8C0B26-7CCD-4A77-9785-AC477F49B538-1057-0000012063F0AF7A"}},{"parameters":[{"defaultValue":"HSB(288,57,43)","value":"HSB(0,0,0)","key":"color","type":44},{"defaultValue":"10","value":"12","key":"width","type":43}],"block_class":"control","description":"Draw a Trail","type":26,"controlScript":{"abilityID":"5BFBA1C8-D9EF-4156-BA4F-51EB1AF86CC2-1057-0000012063F0BBB4"}},{"parameters":[{"defaultValue":"HSB(288,57,43)","value":"HSB(28,100,100)","key":"color","type":44},{"defaultValue":"10","value":"8","key":"width","type":43}],"block_class":"control","type":26,"description":"Draw a Trail","controlScript":{"abilityID":"2B96C6E8-3647-43CB-ACA7-812F90FE4C5A-1057-0000012063F0C8F6"}},{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":"•","key":"to","type":53},{"defaultValue":"HSB(306,19,20)","value":"HSB(28,100,100)","key":"color","type":44}]},{"block_class":"method","description":"Set Size","type":51,"parameters":[{"defaultValue":"110","value":"60","key":"percent","type":42}]},{"block_class":"method","type":43,"description":"Bring to Front"},{"parameters":[{"defaultValue":"5","value":"6","key":"times","type":42}],"block_class":"control","type":120,"description":"Repeat","controlScript":{"abilityID":"42BAFFF2-E90F-4D8A-A500-600DA5EF1720-1057-0000012063F0F0B6"}}],"abilityID":"64BBF633-626B-491E-A7C1-ECCDE5E1C2ED-1057-0000012063F0905D"},{"createdAt":560607745.01855803,"blocks":[{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":"|\n\n\n\n\n\n\n\n|","key":"to","type":53},{"defaultValue":"HSB(306,19,20)","value":"HSB(306,19,20)","key":"color","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"0","key":"H","type":42},{"defaultValue":"86","value":"0","key":"S","type":42},{"defaultValue":"96","value":"60","key":"B","type":42}]},"type":44}]},{"type":42,"block_class":"method","description":"Send to Back"},{"block_class":"method","description":"Set Size","type":51,"parameters":[{"defaultValue":"110","value":"75","key":"percent","type":42}]},{"block_class":"method","type":39,"description":"Set Angle","parameters":[{"defaultValue":"30","value":"30","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"180","key":"","type":42},{"defaultValue":"2","value":"6","key":"÷","type":42}]},"type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"DE478DF2-0B4D-4B30-AAC9-EF546AADAE3A-1057-0000012063F7D928","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42}]},"type":42}]}],"abilityID":"6F70AB8B-1E4B-46B9-9A36-D2AA33A0FA89-1057-0000012063F78AAD"},{"blocks":[{"block_class":"method","description":"Set Text","type":40,"parameters":[{"defaultValue":"","value":" ───　　　 ","key":"to","type":53},{"defaultValue":"HSB(306,19,20)","value":"HSB(0,0,0)","key":"color","type":44}]},{"block_class":"method","description":"Set Size","type":51,"parameters":[{"defaultValue":"110","value":"148","key":"percent","type":42}]},{"type":53,"block_class":"method","description":"Create a Clone of This Object"},{"block_class":"method","type":53,"description":"Create a Clone of This Object"},{"block_class":"control","description":"Repeat Forever","type":121,"controlScript":{"abilityID":"B5372484-F7B4-44DE-A886-E0B02089B826-1057-0000012063F82638"}}],"createdAt":560607949.38412905,"abilityID":"01AD3D66-91CC-4BBF-991E-FFD4DBB06526-1057-0000012063F7F142"},{"createdAt":560608518.17073095,"blocks":[{"controlScript":{"abilityID":"940A6C5D-0FE1-45F8-9274-806133063238-1057-0000012063F949BC"},"controlFalseScript":{"abilityID":"0B830DD9-C63E-4C30-A0B3-C50ACCE35103-1057-0000012063F94E5E"},"block_class":"conditionalControl","type":124,"description":"Check If Else","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"EAC67EB4-5C13-4696-B0B9-31E24B1E6B06-1057-0000012063F941B0","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42},{"defaultValue":"7","value":"2","key":"=","type":42}]},"type":49}]}],"abilityID":"539E7C1B-B855-4D5C-B21F-D98481A4D763-1057-0000012063F91D0F"},{"blocks":[{"block_class":"method","type":54,"description":"Set Color","parameters":[{"defaultValue":"HSB(288,57,43)","value":"HSB(288,57,43)","key":"","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"0","key":"H","type":42},{"defaultValue":"86","value":"0","key":"S","type":42},{"defaultValue":"96","value":"60","key":"B","type":42}]},"type":44}]},{"block_class":"method","type":51,"description":"Set Size","parameters":[{"defaultValue":"110","value":"90","key":"percent","type":42}]},{"block_class":"method","description":"","type":19,"parameters":[{"defaultValue":"500","value":"0","key":"milliseconds","type":42}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":47},{"defaultValue":"10","value":"1","key":"to","type":48}]},{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"0366ECDC-9184-415E-ADEA-5D221665DF05-648-0000005552F7DA4D","description":"Variable"},"type":47},{"defaultValue":"10","value":"0","key":"to","type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","description":"Variable"},"type":47},{"defaultValue":"10","value":"156743000","key":"to","type":48}]},{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"00F905CF-7DFB-4D59-BFB8-F1FCA7592DBF-648-00000054F5992E4B","description":"Variable"},"type":47},{"defaultValue":"10","value":"9","key":"to","type":48}]},{"block_class":"control","type":123,"description":"Calculate Unix Timestamp","controlScript":{"abilityID":"7FC5E4E1-4127-4FB1-9452-F9E582628B39-1057-0000012063DA901B"}},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"21DE1B68-8A4E-415D-AC12-7EBE34B3C083-244-00000014A1A37230","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"18651751-0438-4AB3-AE88-8B804486A350-330-00000017EEBE91C8","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":48}]}],"createdAt":560541573.84420204,"abilityID":"1F96F6CD-43D8-4F84-8051-E41E64B39129-1057-0000012063D9E7D6"},{"blocks":[{"block_class":"control","type":123,"controlScript":{"abilityID":"29F63A39-2C6F-41F5-BD76-B95CDAA2BD01-1057-0000012063DD710A"},"description":"Convert to datetime"},{"controlScript":{"abilityID":"DAE7C7F2-DECF-4375-980F-23CDFFFEE3F9-1057-0000012063E520A2"},"controlFalseScript":{"abilityID":"962F359B-DF69-4D92-A377-DDA94362BE54-1057-0000012063EEA60C"},"block_class":"conditionalControl","description":"Check Once If","type":122,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1004,"description":"and","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"1","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"and","datum":{"block_class":"conditionalOperator","type":1001,"description":"≠","params":[{"defaultValue":"6","value":"6","key":"","datum":{"type":8003,"variable":"12A254B0-B714-434F-AE18-34002CC42E40-244-000000022A96C45C","description":"Variable"},"type":42},{"defaultValue":"7","value":"2021","key":"≠","type":42}]},"type":49}]},"type":49}]},{"controlScript":{"abilityID":"1DB8A255-E6EE-42C8-8F81-2A51A87730E8-1057-0000012063E59BF5"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"13","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","type":122,"description":"Check Once If","controlFalseScript":{"abilityID":"B6088737-238A-4164-BA10-252AEB25EF9D-1057-0000012063EEC56B"}},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"18651751-0438-4AB3-AE88-8B804486A350-330-00000017EEBE91C8","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"0366ECDC-9184-415E-ADEA-5D221665DF05-648-0000005552F7DA4D","description":"Variable"},"type":48}]}],"createdAt":560604478.25104702,"abilityID":"DDD1A8AE-D43E-411F-A5B2-761CB4A59E70-1057-0000012063EE1287"},{"createdAt":560542424.53952301,"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"21186B9E-CABE-4B39-99F5-EE9E01EA2C8B-648-0000005536856AF1","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"0366ECDC-9184-415E-ADEA-5D221665DF05-648-0000005552F7DA4D","description":"Variable"},"type":48}]}],"abilityID":"90EFD948-7715-4E33-A464-11B9DA6A4DF0-1057-0000012063DC7257"},{"blocks":[{"block_class":"control","type":123,"controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"description":"Check if Timestamp passed"}],"createdAt":560542322.53428197,"abilityID":"E94CD02C-15CA-4394-BBA6-DA2EEE611DC5-1057-0000012063DC151D"},{"createdAt":560542515.50206804,"blocks":[{"block_class":"control","description":"Check if Timestamp passed","type":123,"controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"}}],"abilityID":"70CAF9B2-1942-4C6C-8BC4-23334C4FA800-1057-0000012063DC8C2C"},{"blocks":[{"block_class":"control","description":"Check if Timestamp passed","controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"type":123}],"createdAt":560542518.74513805,"abilityID":"80978232-207F-45FE-82D5-48799C84D91C-1057-0000012063DC9711"},{"blocks":[{"block_class":"control","description":"Check if Timestamp passed","controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"type":123}],"createdAt":560542522.20812297,"abilityID":"F2379DBE-478E-4CF7-A761-5ED8062764A5-1057-0000012063DCA1CB"},{"blocks":[{"block_class":"control","description":"Check if Timestamp passed","controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"type":123}],"createdAt":560542524.88761199,"abilityID":"26E2C5D6-0AFB-43AC-AC65-52DBAF41E813-1057-0000012063DCAC64"},{"createdAt":560542527.92286396,"blocks":[{"block_class":"control","description":"Check if Timestamp passed","type":123,"controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"}}],"abilityID":"86038221-E12F-4D36-80EA-534280F0502D-1057-0000012063DCB6E3"},{"blocks":[{"block_class":"control","description":"Check if Timestamp passed","controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"type":123}],"createdAt":560542534.57053804,"abilityID":"6A11F679-0143-4DF7-AB0A-C20034CBEBF8-1057-0000012063DCC196"},{"blocks":[{"block_class":"control","type":123,"controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"description":"Check if Timestamp passed"}],"createdAt":560542537.02209997,"abilityID":"B4DA2B0F-330A-4E46-8BEE-5B78FFA5AF10-1057-0000012063DCCC2B"},{"blocks":[{"block_class":"control","description":"Check if Timestamp passed","controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"type":123}],"createdAt":560542539.52545297,"abilityID":"23E763BF-B184-4B22-A459-436B2023FA76-1057-0000012063DCD6D5"},{"createdAt":560542542.99843895,"blocks":[{"block_class":"control","type":123,"controlScript":{"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6"},"description":"Check if Timestamp passed"}],"abilityID":"48C29F27-E556-429B-BC98-5ECE1F3B5F36-1057-0000012063DCE187"},{"createdAt":560611603.96608198,"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"8A7B0C9A-720C-4A25-9161-E55CF0344D36-399-0000003D0866438C","description":"Variable"},"type":48}]}],"abilityID":"FF11AB74-AFB0-40D6-827D-77FBF5E6AFE7-1057-000001206401F292"},{"createdAt":560611596.48051906,"blocks":[{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"0366ECDC-9184-415E-ADEA-5D221665DF05-648-0000005552F7DA4D","description":"Variable"},"type":48}]}],"abilityID":"686C5036-1731-4000-88F4-3E18EAF86CBF-1057-000001206401D0C1"},{"createdAt":560542250.99935496,"blocks":[{"block_class":"method","description":"Set Text","type":40,"parameters":[{"defaultValue":"","value":"","key":"to","datum":{"type":8003,"variable":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","description":"Variable"},"type":53},{"defaultValue":"HSB(306,19,20)","value":"","key":"color","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"200","key":"H","type":42},{"defaultValue":"86","value":"50","key":"S","type":42},{"defaultValue":"96","value":"80","key":"B","type":42}]},"type":44}]}],"abilityID":"0383A43F-C11F-4533-8B1D-A0638EF7EB17-1057-0000012063DBFACD"},{"blocks":[{"controlScript":{"abilityID":"5D7D0380-0C23-48A3-9A87-4C4B1FC9FE71-1057-0000012063E83E59"},"controlFalseScript":{"abilityID":"FC8CC775-EDF9-4C3E-BDED-83AD384A7D2F-1057-0000012063E842E7"},"block_class":"conditionalControl","type":122,"description":"Check Once If","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":42},{"defaultValue":"7","value":"59","key":"=","type":42}]},"type":49}]},{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":42},{"defaultValue":"3","value":"1","key":"+","type":42}]},"type":42},{"defaultValue":"2","value":"60","key":"%","type":42}]},"type":48}]},{"controlScript":{"abilityID":"BA1CF694-1088-4361-A248-2A0E298FC5AA-1057-0000012063E8988C"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":42},{"defaultValue":"7","value":"59","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","description":"Check If Else","type":124,"controlFalseScript":{"abilityID":"6068A72E-BDEF-4ABC-860D-EC426BEF3B6A-1057-0000012063E89CBF"}}],"createdAt":560554811.115242,"abilityID":"8CD674EA-FB06-43F2-8880-B670168D533B-1057-0000012063E8204F"},{"createdAt":560555119.35644805,"blocks":[{"block_class":"method","type":44,"description":"Increase","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]},{"block_class":"method","description":"Wait","type":35,"parameters":[{"defaultValue":"500","value":"1000","key":"milliseconds","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"1000","key":"","type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"type":8003,"variable":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA","description":"Variable"},"type":42}]},"type":42}]}],"abilityID":"E481F0E3-9653-4214-A196-11C6D39FBF60-1057-0000012063EA38BF"},{"createdAt":560609566.47872806,"blocks":[{"block_class":"method","description":"Increase","type":44,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8004,"variable":"28D46291-73DB-4BCC-923B-E9CC70C5BDA3-34757-00036ADE79BCA35F","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]}],"abilityID":"40322C00-371A-442A-A9BA-D425E2023F78-1057-0000012063FF3AC3"},{"createdAt":560609590.81330597,"blocks":[{"block_class":"method","type":35,"description":"Wait","parameters":[{"defaultValue":"500","value":"1000","key":"milliseconds","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"1000","key":"","type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"type":8003,"variable":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA","description":"Variable"},"type":42}]},"type":42}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"04EF1FE3-751F-42A2-AFF4-F8A7424D0540-399-000000316E032E11","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8004,"variable":"28D46291-73DB-4BCC-923B-E9CC70C5BDA3-34757-00036ADE79BCA35F","description":"Variable"},"type":48}]}],"abilityID":"566FB462-7560-442D-8771-0F14CC261137-1057-0000012063FF6C59"},{"blocks":[{"block_class":"method","description":"Wait","type":35,"parameters":[{"defaultValue":"500","value":"1000","key":"milliseconds","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"1000","key":"","type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"type":8003,"variable":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA","description":"Variable"},"type":42}]},"type":42}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8004,"variable":"28D46291-73DB-4BCC-923B-E9CC70C5BDA3-34757-00036ADE79BCA35F","description":"Variable"},"type":47},{"defaultValue":"10","value":"0","key":"to","type":48}]}],"createdAt":560609611.62975705,"abilityID":"2758A124-820A-4F68-86C6-4895DAA32DFC-1057-0000012063FFC0EA"},{"createdAt":560609632.05498302,"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA","description":"Variable"},"type":47},{"defaultValue":"10","value":"1000","key":"to","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"1000","key":"","type":42},{"defaultValue":"2","value":"2","key":"÷","datum":{"type":8003,"variable":"04EF1FE3-751F-42A2-AFF4-F8A7424D0540-399-000000316E032E11","description":"Variable"},"type":42}]},"type":48}]}],"abilityID":"02BF2609-7FF2-4AFC-8917-FF68204B925D-1057-0000012063FFFCC1"},{"blocks":[{"controlScript":{"abilityID":"633AFA92-9257-4042-A37F-8DFA3A3CD550-1057-0000012064028329"},"block_class":"control","type":120,"description":"Repeat","parameters":[{"defaultValue":"5","value":"5","key":"times","type":42}]},{"block_class":"method","type":51,"description":"Set Size","parameters":[{"defaultValue":"110","value":"130","key":"percent","type":42}]},{"block_class":"control","type":121,"description":"Repeat Forever","controlScript":{"abilityID":"10BA9FC1-9315-49B9-A66F-8664B2BB81D2-1057-0000012064029CA5"}}],"createdAt":589130626.29831505,"abilityID":"9376EA68-83A5-4EF7-89F0-F465BC36BFB6-1057-00000120640278F3"},{"createdAt":589130716.10374296,"blocks":[{"block_class":"method","description":"Set Size","type":51,"parameters":[{"defaultValue":"110","value":"130","key":"percent","type":42}]},{"block_class":"method","description":"Set Speed","type":34,"parameters":[{"defaultValue":"1000","value":"10000000","key":"to","type":42}]},{"block_class":"method","description":"Move Forward","type":23,"parameters":[{"defaultValue":"100","value":"27","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"27","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"27","key":"","type":42},{"defaultValue":"3","value":"","key":"×","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"1E35497C-54A7-44ED-B7F1-D5C3FBBA5273-1057-000001206402F131","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42},{"defaultValue":"2","value":"1","key":"−","type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"28","key":"+","type":42}]},"type":42}]},{"controlScript":{"abilityID":"75E3A828-AE81-41ED-AC37-B50CABC2CE4B-1057-0000012064031C1A"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1002,"description":"＜","params":[{"defaultValue":"6","value":"","key":"","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"35D71536-8475-4D0A-B11F-B013EF331F23-1057-00000120640315ED","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42},{"defaultValue":"7","value":"6","key":"＜","type":42}]},"type":49}],"block_class":"conditionalControl","type":124,"description":"Check If Else","controlFalseScript":{"abilityID":"69C1E744-FEBC-4E33-ADAC-8933A01F3B24-1057-000001206403204B"}}],"abilityID":"6844A289-E805-4137-A443-547C8C58E869-1057-000001206402AEE2"},{"createdAt":560605485.97260702,"blocks":[{"block_class":"method","type":41,"description":"Set Position","parameters":[{"defaultValue":"200","value":"200","key":"to x","datum":{"HSTraitTypeKey":2001,"HSTraitIDKey":"1798514D-6EC7-4995-BB6C-CED0AB801154-1057-0000012063F103B0","HSTraitObjectParameterTypeKey":8004,"description":"X Position"},"type":42},{"defaultValue":"200","value":"50","key":"y","datum":{"HSTraitTypeKey":2002,"HSTraitIDKey":"27B4AE71-7459-431D-9111-79AD3DCCA4D9-1057-0000012063F10E1D","HSTraitObjectParameterTypeKey":8004,"description":"Y Position"},"type":42}]}],"abilityID":"5C129A8A-E510-4F98-970D-0D41E05ACA9D-1057-0000012063F0A313"},{"blocks":[{"block_class":"method","type":41,"description":"Set Position","parameters":[{"defaultValue":"200","value":"200","key":"to x","datum":{"HSTraitTypeKey":2001,"HSTraitIDKey":"87FECBE3-21C0-420E-BC9D-36583D5505DE-1057-0000012063F122EA","HSTraitObjectParameterTypeKey":8004,"description":"X Position"},"type":42},{"defaultValue":"200","value":"200","key":"y","datum":{"HSTraitTypeKey":2002,"HSTraitIDKey":"F6C7D449-5E34-4F5A-A0D8-59BCBF767005-1057-0000012063F12D6A","HSTraitObjectParameterTypeKey":8004,"description":"Y Position"},"type":42}]}],"createdAt":560605503.00369704,"abilityID":"CE8C0B26-7CCD-4A77-9785-AC477F49B538-1057-0000012063F0AF7A"},{"createdAt":560608460.72800505,"blocks":[{"block_class":"method","type":41,"description":"Set Position","parameters":[{"defaultValue":"200","value":"200","key":"to x","datum":{"HSTraitTypeKey":2001,"HSTraitIDKey":"2F3C2A03-2225-46A3-BA91-6C6061282897-1057-0000012063F9027C","HSTraitObjectParameterTypeKey":8004,"description":"X Position"},"type":42},{"defaultValue":"200","value":"50","key":"y","datum":{"HSTraitTypeKey":2002,"HSTraitIDKey":"01B07AB0-BDB7-414C-A6A8-46FBB9D8A9A2-1057-0000012063F913CD","HSTraitObjectParameterTypeKey":8004,"description":"Y Position"},"type":42}]}],"abilityID":"5BFBA1C8-D9EF-4156-BA4F-51EB1AF86CC2-1057-0000012063F0BBB4"},{"createdAt":560608746.31383002,"blocks":[{"block_class":"method","description":"Set Position","type":41,"parameters":[{"defaultValue":"200","value":"200","key":"to x","datum":{"HSTraitTypeKey":2001,"HSTraitIDKey":"2C315E38-766C-470F-86D3-ADF0B611848A-1057-0000012063FA897A","HSTraitObjectParameterTypeKey":8004,"description":"X Position"},"type":42},{"defaultValue":"200","value":"50","key":"y","datum":{"HSTraitTypeKey":2002,"HSTraitIDKey":"3E64D24B-C377-4E63-9982-8B25D1DD05C9-1057-0000012063FAA69C","HSTraitObjectParameterTypeKey":8004,"description":"Y Position"},"type":42}]}],"abilityID":"2B96C6E8-3647-43CB-ACA7-812F90FE4C5A-1057-0000012063F0C8F6"},{"createdAt":560607737.77212203,"blocks":[{"block_class":"method","type":53,"description":"Create a Clone of This Object"}],"abilityID":"42BAFFF2-E90F-4D8A-A500-600DA5EF1720-1057-0000012063F0F0B6"},{"blocks":[{"block_class":"method","type":39,"description":"Set Angle","parameters":[{"defaultValue":"30","value":"30","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"360","key":"","type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":42}]},"type":42},{"defaultValue":"3","value":"-1","key":"×","type":42}]},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},{"block_class":"method","type":41,"description":"Set Position","parameters":[{"defaultValue":"200","value":"","key":"to x","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"block_class":"operator","type":4008,"description":"Cos","params":[{"defaultValue":"45","value":"45","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"45","key":"","datum":{"HSTraitTypeKey":2000,"HSTraitIDKey":"0C91F594-50F6-4A7E-B7B9-9255C8540EF3-1057-0000012063F89E1E","HSTraitObjectParameterTypeKey":8004,"description":"Rotation"},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"512","key":"+","type":42}]},"type":42},{"defaultValue":"200","value":"384","key":"y","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"block_class":"operator","type":4007,"description":"Sin","params":[{"defaultValue":"45","value":"45","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"HSTraitTypeKey":2000,"HSTraitIDKey":"8EDC84E2-9314-4A10-9529-AA13724119A1-1057-0000012063F8E236","HSTraitObjectParameterTypeKey":8004,"description":"Rotation"},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"384","key":"+","type":42}]},"type":42}]}],"createdAt":560608213.01814902,"abilityID":"B5372484-F7B4-44DE-A886-E0B02089B826-1057-0000012063F82638"},{"createdAt":560608531.82230997,"blocks":[{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":" ────　　　  ","key":"to","type":53},{"defaultValue":"HSB(306,19,20)","value":"HSB(28,100,100)","key":"color","type":44}]},{"block_class":"method","description":"Set Size","type":51,"parameters":[{"defaultValue":"110","value":"120","key":"percent","type":42}]},{"block_class":"control","description":"Repeat Forever","type":121,"controlScript":{"abilityID":"A16A179E-18D2-4F86-94DF-6B7491FA3FDB-1057-0000012063F959E3"}}],"abilityID":"940A6C5D-0FE1-45F8-9274-806133063238-1057-0000012063F949BC"},{"createdAt":560608531.82231796,"blocks":[{"controlScript":{"abilityID":"B6FBFF55-2C7B-4FBD-AF92-7DF3C4C72888-1057-0000012063FA6671"},"controlFalseScript":{"abilityID":"4C3F6FA7-6EB7-4682-BAA8-347C9F751D69-1057-0000012063FA6AC5"},"block_class":"conditionalControl","type":124,"description":"Check If Else","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"D779DD90-15E7-429E-98C4-60337E7DEFCA-1057-0000012063FA5EB5","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42},{"defaultValue":"7","value":"3","key":"=","type":42}]},"type":49}]}],"abilityID":"0B830DD9-C63E-4C30-A0B3-C50ACCE35103-1057-0000012063F94E5E"},{"createdAt":560608518.17297399,"blocks":[{"block_class":"method","description":"Set Angle","type":39,"parameters":[{"defaultValue":"30","value":"30","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"360","key":"","type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":42}]},"type":42},{"defaultValue":"3","value":"-1","key":"×","type":42}]},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},{"block_class":"method","description":"Set Position","type":41,"parameters":[{"defaultValue":"200","value":"","key":"to x","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"block_class":"operator","type":4008,"description":"Cos","params":[{"defaultValue":"45","value":"45","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"45","key":"","datum":{"HSTraitTypeKey":2000,"HSTraitIDKey":"579E6325-4DA0-4A13-835E-CB838315726D-1057-0000012063F9C9C2","HSTraitObjectParameterTypeKey":8004,"description":"Rotation"},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"512","key":"+","type":42}]},"type":42},{"defaultValue":"200","value":"384","key":"y","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"block_class":"operator","type":4007,"description":"Sin","params":[{"defaultValue":"45","value":"45","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"HSTraitTypeKey":2000,"HSTraitIDKey":"91EBBFD5-C0EE-44E2-8D6D-658EE539480D-1057-0000012063F9FE41","HSTraitObjectParameterTypeKey":8004,"description":"Rotation"},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"384","key":"+","type":42}]},"type":42}]}],"abilityID":"A16A179E-18D2-4F86-94DF-6B7491FA3FDB-1057-0000012063F959E3"},{"createdAt":560608869.41225696,"blocks":[{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":"━━　　","key":"to","type":53},{"defaultValue":"HSB(306,19,20)","value":"HSB(0,0,0)","key":"color","type":44}]},{"block_class":"method","type":51,"description":"Set Size","parameters":[{"defaultValue":"110","value":"130","key":"percent","type":42}]},{"block_class":"method","type":42,"description":"Send to Back"},{"block_class":"control","type":121,"controlScript":{"abilityID":"50AB7E2D-74BE-4B9A-993C-A4EBAAB9EB17-1057-0000012063FE4401"},"description":"Repeat Forever"}],"abilityID":"B6FBFF55-2C7B-4FBD-AF92-7DF3C4C72888-1057-0000012063FA6671"},{"createdAt":560608869.41375196,"blocks":[{"block_class":"method","description":"Set Angle","type":39,"parameters":[{"defaultValue":"30","value":"30","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"360","key":"","type":42},{"defaultValue":"2","value":"12","key":"÷","type":42}]},"type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"type":8003,"variable":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","description":"Variable"},"type":42}]},"type":42},{"defaultValue":"3","value":"3","key":"+","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"360","key":"","type":42},{"defaultValue":"2","value":"12","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"-1","key":"×","type":42}]},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},{"block_class":"method","description":"Set Position","type":41,"parameters":[{"defaultValue":"200","value":"","key":"to x","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"block_class":"operator","type":4008,"description":"Cos","params":[{"defaultValue":"45","value":"45","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"45","key":"","datum":{"HSTraitTypeKey":2000,"HSTraitIDKey":"AC7B2C43-6BB9-4C89-B901-19B8FCACF734-1057-0000012063FEFE06","HSTraitObjectParameterTypeKey":8004,"description":"Rotation"},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"512","key":"+","type":42}]},"type":42},{"defaultValue":"200","value":"384","key":"y","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","type":42},{"defaultValue":"3","value":"3","key":"×","datum":{"block_class":"operator","type":4007,"description":"Sin","params":[{"defaultValue":"45","value":"45","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"HSTraitTypeKey":2000,"HSTraitIDKey":"0F6D5A9E-26DB-4C73-B565-95FAC16A0A0D-1057-0000012063FF2E12","HSTraitObjectParameterTypeKey":8004,"description":"Rotation"},"type":42},{"defaultValue":"3","value":"-90","key":"+","type":42}]},"type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"384","key":"+","type":42}]},"type":42}]}],"abilityID":"50AB7E2D-74BE-4B9A-993C-A4EBAAB9EB17-1057-0000012063FE4401"},{"blocks":[{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":48}]},{"block_class":"method","type":35,"description":"Wait","parameters":[{"defaultValue":"500","value":"0","key":"milliseconds","type":42}]},{"controlScript":{"abilityID":"74FBA47C-A502-4D67-9F9F-4CF2B0070463-1057-0000012063DBEF91"},"controlFalseScript":{"abilityID":"4CF0E14F-E232-46B3-94C9-6803E133EB60-1057-0000012063DBF427"},"block_class":"conditionalControl","description":"Check If Else","type":124,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"21186B9E-CABE-4B39-99F5-EE9E01EA2C8B-648-0000005536856AF1","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"=","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":42}]},"type":49}]}],"abilityID":"7FC5E4E1-4127-4FB1-9452-F9E582628B39-1057-0000012063DA901B","name":"Calculate Unix Timestamp","createdAt":560542019.32850599},{"blocks":[{"block_class":"method","type":44,"description":"Increase","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","datum":{"block_class":"operator","type":4005,"description":"^","params":[{"defaultValue":"2","value":"10","key":"","type":42},{"defaultValue":"3","value":"3","key":"^","datum":{"type":8003,"variable":"00F905CF-7DFB-4D59-BFB8-F1FCA7592DBF-648-00000054F5992E4B","description":"Variable"},"type":42}]},"type":48}]},{"block_class":"control","description":"Calculate Unix Timestamp","controlScript":{"abilityID":"7FC5E4E1-4127-4FB1-9452-F9E582628B39-1057-0000012063DA901B"},"type":123}],"createdAt":560542667.85032296,"abilityID":"74FBA47C-A502-4D67-9F9F-4CF2B0070463-1057-0000012063DBEF91"},{"blocks":[{"block_class":"method","type":44,"description":"Increase","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"1","key":"","datum":{"block_class":"operator","type":4005,"description":"^","params":[{"defaultValue":"2","value":"10","key":"","type":42},{"defaultValue":"3","value":"3","key":"^","datum":{"type":8003,"variable":"00F905CF-7DFB-4D59-BFB8-F1FCA7592DBF-648-00000054F5992E4B","description":"Variable"},"type":42}]},"type":42},{"defaultValue":"3","value":"-1","key":"×","type":42}]},"type":48}]},{"controlScript":{"abilityID":"8617AF5F-8CFE-4170-97A9-C9FC21E1C77C-1057-0000012063DD4DF1"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1003,"description":"＞","params":[{"defaultValue":"8","value":"8","key":"","datum":{"type":8003,"variable":"00F905CF-7DFB-4D59-BFB8-F1FCA7592DBF-648-00000054F5992E4B","description":"Variable"},"type":42},{"defaultValue":"7","value":"0","key":"＞","type":42}]},"type":49}],"block_class":"conditionalControl","description":"Check Once If","type":122,"controlFalseScript":{"abilityID":"17543AD5-E787-4876-AE3C-09ED78DF9E09-1057-0000012063DD510E"}}],"createdAt":560542667.850335,"abilityID":"4CF0E14F-E232-46B3-94C9-6803E133EB60-1057-0000012063DBF427"},{"blocks":[{"block_class":"method","type":44,"description":"Increase","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"00F905CF-7DFB-4D59-BFB8-F1FCA7592DBF-648-00000054F5992E4B","description":"Variable"},"type":47},{"defaultValue":"1","value":"-1","key":"by","type":48}]},{"block_class":"control","type":123,"description":"Calculate Unix Timestamp","controlScript":{"abilityID":"7FC5E4E1-4127-4FB1-9452-F9E582628B39-1057-0000012063DA901B"}}],"createdAt":560542730.63048196,"abilityID":"8617AF5F-8CFE-4170-97A9-C9FC21E1C77C-1057-0000012063DD4DF1"},{"blocks":[{"block_class":"control","description":"Adjust for Timezone","controlScript":{"abilityID":"439CDCEC-CD65-4A7C-95BD-2D3E9C78454F-1057-0000012063DD78B6"},"type":123},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":47},{"defaultValue":"10","value":"","key":"to","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"E089E882-C6EA-4156-9246-284826BC7D89-330-00000018D48ACF76","description":"Variable"},"type":42},{"defaultValue":"2","value":"60","key":"%","type":42}]},"type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4009,"description":"Round","params":[{"defaultValue":"2.5","value":"2.5","key":"","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"E089E882-C6EA-4156-9246-284826BC7D89-330-00000018D48ACF76","description":"Variable"},"type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"0.5","key":"−","type":42}]},"type":42}]},"type":42},{"defaultValue":"2","value":"60","key":"%","type":42}]},"type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"10","key":"","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4009,"description":"Round","params":[{"defaultValue":"2.5","value":"2.5","key":"","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"E089E882-C6EA-4156-9246-284826BC7D89-330-00000018D48ACF76","description":"Variable"},"type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"0.5","key":"−","type":42}]},"type":42}]},"type":42},{"defaultValue":"2","value":"24","key":"%","type":42}]},"type":42},{"defaultValue":"3","value":"0","key":"+","type":42}]},"type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4009,"description":"Round","params":[{"defaultValue":"2.5","value":"2.5","key":"","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"E089E882-C6EA-4156-9246-284826BC7D89-330-00000018D48ACF76","description":"Variable"},"type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"60","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"24","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"0.5","key":"−","type":42}]},"type":42}]},"type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"E9088EF5-5549-4D1E-9DA8-EEBB9B5FC7D5-330-0000001E94FEF60C","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":42},{"defaultValue":"3","value":"4","key":"+","type":42}]},"type":42},{"defaultValue":"2","value":"7","key":"%","type":42}]},"type":42},{"defaultValue":"3","value":"1","key":"+","type":42}]},"type":48}]},{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"DEA31B86-55C4-473F-B762-02587CDEE66F-244-0000000549315CF9","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4009,"description":"Round","params":[{"defaultValue":"2.5","value":"2.5","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":42},{"defaultValue":"2","value":"365.25","key":"÷","type":42}]},"type":42},{"defaultValue":"3","value":"-0.5","key":"+","type":42}]},"type":42}]},"type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"12A254B0-B714-434F-AE18-34002CC42E40-244-000000022A96C45C","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"1970","key":"","type":42},{"defaultValue":"3","value":"3","key":"+","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"DEA31B86-55C4-473F-B762-02587CDEE66F-244-0000000549315CF9","description":"Variable"},"type":42},{"defaultValue":"3","value":"0","key":"+","type":42}]},"type":42}]},"type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"DEA31B86-55C4-473F-B762-02587CDEE66F-244-0000000549315CF9","description":"Variable"},"type":42},{"defaultValue":"3","value":"365","key":"×","type":42}]},"type":42}]},"type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4009,"description":"Round","params":[{"defaultValue":"2.5","value":"2.5","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"DEA31B86-55C4-473F-B762-02587CDEE66F-244-0000000549315CF9","description":"Variable"},"type":42},{"defaultValue":"2","value":"4","key":"÷","type":42}]},"type":42},{"defaultValue":"3","value":"-0.5","key":"+","type":42}]},"type":42}]},"type":42},{"defaultValue":"3","value":"-1","key":"+","type":42}]},"type":42}]},"type":48}]},{"type":122,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"12A254B0-B714-434F-AE18-34002CC42E40-244-000000022A96C45C","description":"Variable"},"type":42},{"defaultValue":"2","value":"4","key":"%","type":42}]},"type":42},{"defaultValue":"7","value":"0","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","description":"Check Once If","controlScript":{"abilityID":"7916D8F9-0BAA-48C0-BBDD-C5E29705820E-1057-0000012063DF96D9"},"controlFalseScript":{"abilityID":"BDD84626-DF94-4ACC-BBC7-F899DDFF3A01-1057-0000012063DF9DA9"}},{"description":"Check Once If","controlFalseScript":{"abilityID":"39663F1F-9677-4E56-BD77-DAC582E2504B-1057-0000012063DFDB51"},"block_class":"conditionalControl","type":122,"controlScript":{"abilityID":"0F5F7CC8-A234-47AB-B608-E1B296560150-1057-0000012063DFD5C2"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"12A254B0-B714-434F-AE18-34002CC42E40-244-000000022A96C45C","description":"Variable"},"type":42},{"defaultValue":"2","value":"100","key":"%","type":42}]},"type":42},{"defaultValue":"7","value":"0","key":"=","type":42}]},"type":49}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":47},{"defaultValue":"10","value":"0","key":"to","type":48}]},{"block_class":"control","type":123,"description":"While Month <= 12","controlScript":{"abilityID":"64C31FB1-BD47-47DA-8AC5-66C388F4AE00-1057-0000012063E00B0A"}}],"abilityID":"29F63A39-2C6F-41F5-BD76-B95CDAA2BD01-1057-0000012063DD710A","name":"Convert to datetime","createdAt":560551482.57734394},{"blocks":[{"block_class":"method","description":"Increase","type":44,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]}],"createdAt":542586001.24879396,"abilityID":"DAE7C7F2-DECF-4375-980F-23CDFFFEE3F9-1057-0000012063E520A2"},{"blocks":[{"block_class":"method","description":"Increase","type":44,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"12A254B0-B714-434F-AE18-34002CC42E40-244-000000022A96C45C","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":47},{"defaultValue":"10","value":"1","key":"to","type":48}]}],"createdAt":567973923.17696595,"abilityID":"1DB8A255-E6EE-42C8-8F81-2A51A87730E8-1057-0000012063E59BF5"},{"blocks":[{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"E089E882-C6EA-4156-9246-284826BC7D89-330-00000018D48ACF76","description":"Variable"},"type":47},{"defaultValue":"10","value":"","key":"to","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","description":"Variable"},"type":42},{"defaultValue":"3","value":"3","key":"+","datum":{"type":8003,"variable":"85F55794-034A-4209-A786-23194723C938-330-000000173B1F4ABF","description":"Variable"},"type":42}]},"type":48}]}],"abilityID":"439CDCEC-CD65-4A7C-95BD-2D3E9C78454F-1057-0000012063DD78B6","name":"Adjust for Timezone","createdAt":560604541.43365502},{"createdAt":560552348.39246094,"blocks":[{"block_class":"method","type":44,"description":"Increase","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"78D88DF8-8EF1-452C-9803-36B17B352144-244-0000000734A5B605","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]}],"abilityID":"7916D8F9-0BAA-48C0-BBDD-C5E29705820E-1057-0000012063DF96D9"},{"createdAt":560552398.44769299,"blocks":[{"block_class":"method","description":"Increase","type":44,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"78D88DF8-8EF1-452C-9803-36B17B352144-244-0000000734A5B605","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]},{"controlScript":{"abilityID":"A647F9CC-0653-4BEC-9DE5-325A7CF8DDF6-1057-0000012063E16BF2"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"12A254B0-B714-434F-AE18-34002CC42E40-244-000000022A96C45C","description":"Variable"},"type":42},{"defaultValue":"2","value":"400","key":"%","type":42}]},"type":42},{"defaultValue":"7","value":"0","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","type":122,"description":"Check Once If","controlFalseScript":{"abilityID":"2286B69F-9FB6-45A4-9095-02262F1CA44C-1057-0000012063E172C7"}}],"abilityID":"0F5F7CC8-A234-47AB-B608-E1B296560150-1057-0000012063DFD5C2"},{"blocks":[{"block_class":"method","type":44,"description":"Increase","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]},{"type":124,"controlFalseScript":{"abilityID":"9DC38F06-48D6-4AA6-BFF1-35FEB6286A0C-1057-0000012063E215CF"},"block_class":"conditionalControl","description":"Check If Else","controlScript":{"abilityID":"71E2949F-A5E8-40B0-84ED-9E2F248C73D4-1057-0000012063E20FEA"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"2","key":"=","type":42}]},"type":49}]},{"block_class":"method","description":"Set Text","type":40,"parameters":[{"defaultValue":"","value":"","key":"to","datum":{"type":8003,"variable":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","description":"Variable"},"type":53},{"defaultValue":"HSB(306,19,20)","value":"HSB(306,19,20)","key":"color","type":44}]},{"controlScript":{"abilityID":"406E4CD0-D3D8-4A00-939E-FEEE9833E0DD-1057-0000012063E26C24"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1003,"description":"＞","params":[{"defaultValue":"8","value":"8","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"＞","datum":{"type":8003,"variable":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","description":"Variable"},"type":42}]},"type":49}],"block_class":"conditionalControl","description":"Check Once If","type":122,"controlFalseScript":{"abilityID":"D06DA32E-73C3-48D3-A007-8A95F2B2FE3F-1057-0000012063E27153"}}],"abilityID":"64C31FB1-BD47-47DA-8AC5-66C388F4AE00-1057-0000012063E00B0A","name":"While Month <= 12","createdAt":560552479.03503501},{"createdAt":560552401.240991,"blocks":[{"block_class":"method","type":44,"description":"Increase","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"78D88DF8-8EF1-452C-9803-36B17B352144-244-0000000734A5B605","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]}],"abilityID":"A647F9CC-0653-4BEC-9DE5-325A7CF8DDF6-1057-0000012063E16BF2"},{"createdAt":560552582.85780799,"blocks":[{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","description":"Variable"},"type":47},{"defaultValue":"10","value":"28","key":"to","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"28","key":"","type":42},{"defaultValue":"3","value":"3","key":"+","datum":{"type":8003,"variable":"78D88DF8-8EF1-452C-9803-36B17B352144-244-0000000734A5B605","description":"Variable"},"type":42}]},"type":48}]}],"abilityID":"71E2949F-A5E8-40B0-84ED-9E2F248C73D4-1057-0000012063E20FEA"},{"createdAt":560552582.85782301,"blocks":[{"description":"Check If Else","controlFalseScript":{"abilityID":"A001D78A-B8D8-46BF-B03F-A2400AAD3FB2-1057-0000012063E2DDA1"},"block_class":"conditionalControl","type":124,"controlScript":{"abilityID":"B72610D2-B795-469E-9EF2-845C4E5EAD61-1057-0000012063E2D9A1"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1002,"description":"＜","params":[{"defaultValue":"6","value":"6","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"7","key":"＜","type":42}]},"type":49}]},{"controlScript":{"abilityID":"0767521B-DFD5-4E74-8A44-A35C7F0F44A2-1057-0000012063E38C4F"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"1","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"12","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"10","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"3","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"5","key":"=","type":42}]},"type":49}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"8","key":"=","type":42}]},"type":49}]},"type":49}]},"type":49}]},"type":49}]},"type":49}],"block_class":"conditionalControl","description":"Check If Else","type":124,"controlFalseScript":{"abilityID":"0D4B7539-B47B-480C-9243-70A60A5AFC21-1057-0000012063E39093"}}],"abilityID":"9DC38F06-48D6-4AA6-BFF1-35FEB6286A0C-1057-0000012063E215CF"},{"createdAt":560552749.59165096,"blocks":[{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"type":8003,"variable":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","description":"Variable"},"type":42}]},"type":48}]},{"description":"Check Once If","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1002,"description":"＜","params":[{"defaultValue":"6","value":"6","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"13","key":"＜","type":42}]},"type":49}],"block_class":"conditionalControl","type":122,"controlScript":{"abilityID":"570ECB20-B73D-437A-B0DD-15AF15C0B664-1057-0000012063E45E3A"},"controlFalseScript":{"abilityID":"A241E987-04B5-42D6-AE85-642B99C74361-1057-0000012063E4635C"}}],"abilityID":"406E4CD0-D3D8-4A00-939E-FEEE9833E0DD-1057-0000012063E26C24"},{"createdAt":560552684.30992699,"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"AED3DCB3-92AE-440B-AB8C-2B7F1B400956-244-00000008BA43E2A0","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":48}]}],"abilityID":"B72610D2-B795-469E-9EF2-845C4E5EAD61-1057-0000012063E2D9A1"},{"createdAt":560552684.30994403,"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"AED3DCB3-92AE-440B-AB8C-2B7F1B400956-244-00000008BA43E2A0","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"0366ECDC-9184-415E-ADEA-5D221665DF05-648-0000005552F7DA4D","description":"Variable"},"type":48}]}],"abilityID":"A001D78A-B8D8-46BF-B03F-A2400AAD3FB2-1057-0000012063E2DDA1"},{"createdAt":544310354.80420899,"blocks":[{"type":124,"controlFalseScript":{"abilityID":"773319E9-07E0-4003-B6F4-3677ACA223A0-1057-0000012063E51832"},"block_class":"conditionalControl","description":"Check If Else","controlScript":{"abilityID":"58524049-31BA-493A-B8C1-0F1A63FCA979-1057-0000012063E5133C"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"11","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"9","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1005,"description":"or","params":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"4","key":"=","type":42}]},"type":49},{"defaultValue":"","value":"","key":"or","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"7","value":"6","key":"=","type":42}]},"type":49}]},"type":49}]},"type":49}]},"type":49}]}],"abilityID":"0D4B7539-B47B-480C-9243-70A60A5AFC21-1057-0000012063E39093"},{"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","description":"Variable"},"type":47},{"defaultValue":"10","value":"31","key":"to","type":48}]}],"createdAt":544310354.80420494,"abilityID":"0767521B-DFD5-4E74-8A44-A35C7F0F44A2-1057-0000012063E38C4F"},{"blocks":[{"block_class":"control","description":"While Month <= 12","controlScript":{"abilityID":"64C31FB1-BD47-47DA-8AC5-66C388F4AE00-1057-0000012063E00B0A"},"type":123}],"createdAt":560552787.14636099,"abilityID":"570ECB20-B73D-437A-B0DD-15AF15C0B664-1057-0000012063E45E3A"},{"createdAt":546902460.54885101,"blocks":[{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","description":"Variable"},"type":47},{"defaultValue":"10","value":"30","key":"to","type":48}]}],"abilityID":"58524049-31BA-493A-B8C1-0F1A63FCA979-1057-0000012063E5133C"},{"createdAt":546902460.54885495,"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"30","key":"","type":42},{"defaultValue":"3","value":"3","key":"+","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","description":"Variable"},"type":42},{"defaultValue":"3","value":"","key":"+","datum":{"type":8003,"variable":"AED3DCB3-92AE-440B-AB8C-2B7F1B400956-244-00000008BA43E2A0","description":"Variable"},"type":42}]},"type":42},{"defaultValue":"2","value":"2","key":"%","type":42}]},"type":42}]},"type":48}]}],"abilityID":"773319E9-07E0-4003-B6F4-3677ACA223A0-1057-0000012063E51832"},{"blocks":[{"block_class":"method","description":"Increase","type":44,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"8A7B0C9A-720C-4A25-9161-E55CF0344D36-399-0000003D0866438C","description":"Variable"},"type":47},{"defaultValue":"1","value":"1","key":"by","type":48}]},{"block_class":"method","type":19,"description":"","parameters":[{"defaultValue":"500","value":"","key":"milliseconds","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","description":"Variable"},"type":42},{"defaultValue":"3","value":"1000","key":"×","type":42}]},"type":42}]},{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"21186B9E-CABE-4B39-99F5-EE9E01EA2C8B-648-0000005536856AF1","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"type":8003,"variable":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F","description":"Variable"},"type":48}]},{"block_class":"method","description":"Increase","type":44,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"8A7B0C9A-720C-4A25-9161-E55CF0344D36-399-0000003D0866438C","description":"Variable"},"type":47},{"defaultValue":"1","value":"-1","key":"by","type":48}]}],"abilityID":"CD283D40-F361-413A-AE65-B18A6C708CAC-1057-0000012063DC1CA6","name":"Check if Timestamp passed","createdAt":560542353.79175794},{"blocks":[{"controlScript":{"abilityID":"F1E1111A-1102-4F07-9A6D-F3ADB474C074-1057-0000012063E8C195"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":42},{"defaultValue":"7","value":"59","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","type":122,"description":"Check Once If","controlFalseScript":{"abilityID":"FDB31B7F-70E0-468E-942F-1F8841B05C75-1057-0000012063E8C59E"}},{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":42},{"defaultValue":"3","value":"1","key":"+","type":42}]},"type":42},{"defaultValue":"2","value":"60","key":"%","type":42}]},"type":48}]}],"createdAt":560554848.29275095,"abilityID":"5D7D0380-0C23-48A3-9A87-4C4B1FC9FE71-1057-0000012063E83E59"},{"createdAt":560609731.25880301,"blocks":[{"block_class":"method","type":35,"description":"Wait","parameters":[{"defaultValue":"500","value":"","key":"milliseconds","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"1000","key":"","type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA","description":"Variable"},"type":42},{"defaultValue":"3","value":"2","key":"×","type":42}]},"type":42}]},"type":42}]}],"abilityID":"6068A72E-BDEF-4ABC-860D-EC426BEF3B6A-1057-0000012063E89CBF"},{"createdAt":560609731.25877202,"blocks":[{"controlScript":{"abilityID":"807B9C9D-8A67-4B33-BF58-E231D8D688B9-1057-0000012064003FAF"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":42},{"defaultValue":"7","value":"59","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","type":122,"description":"Check Once If","controlFalseScript":{"abilityID":"9788AE7C-27E8-41F0-863E-54FAD6D79DD0-1057-000001206400FDD7"}}],"abilityID":"BA1CF694-1088-4361-A248-2A0E298FC5AA-1057-0000012063E8988C"},{"createdAt":560554885.10318899,"blocks":[{"controlScript":{"abilityID":"6B9F16CC-ED09-4CA4-99C7-53BB2DD30990-1057-0000012063E91B53"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","description":"Variable"},"type":42},{"defaultValue":"7","value":"23","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","type":122,"description":"Check Once If","controlFalseScript":{"abilityID":"91183040-E591-4BB2-A37D-CCFDE539E3AC-1057-0000012063E91F68"}},{"block_class":"method","description":"Set","type":45,"parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","description":"Variable"},"type":42},{"defaultValue":"3","value":"1","key":"+","type":42}]},"type":42},{"defaultValue":"2","value":"24","key":"%","type":42}]},"type":48}]}],"abilityID":"F1E1111A-1102-4F07-9A6D-F3ADB474C074-1057-0000012063E8C195"},{"blocks":[{"controlScript":{"abilityID":"A7C5A38D-0138-4460-83D6-34A74E9184B5-1057-000001206400607F"},"controlFalseScript":{"abilityID":"626DC522-6DA6-476D-801D-C8C468AD6405-1057-0000012064006539"},"block_class":"conditionalControl","type":122,"description":"Check Once If","parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"type":8003,"variable":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","description":"Variable"},"type":42},{"defaultValue":"7","value":"23","key":"=","type":42}]},"type":49}]},{"block_class":"method","type":35,"description":"Wait","parameters":[{"defaultValue":"500","value":"","key":"milliseconds","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"1000","key":"","type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA","description":"Variable"},"type":42},{"defaultValue":"3","value":"3","key":"×","type":42}]},"type":42}]},"type":42}]}],"createdAt":560609729.08684695,"abilityID":"807B9C9D-8A67-4B33-BF58-E231D8D688B9-1057-0000012064003FAF"},{"blocks":[{"block_class":"method","type":45,"description":"Set","parameters":[{"defaultValue":"","value":"","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":47},{"defaultValue":"10","value":"10","key":"to","datum":{"block_class":"operator","type":4000,"description":"+","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","description":"Variable"},"type":42},{"defaultValue":"3","value":"1","key":"+","type":42}]},"type":48}]}],"createdAt":560554952.85888505,"abilityID":"6B9F16CC-ED09-4CA4-99C7-53BB2DD30990-1057-0000012063E91B53"},{"createdAt":560609729.08868802,"blocks":[{"block_class":"method","type":35,"description":"Wait","parameters":[{"defaultValue":"500","value":"","key":"milliseconds","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"1000","key":"","type":42},{"defaultValue":"2","value":"2","key":"−","datum":{"block_class":"operator","type":4002,"description":"×","params":[{"defaultValue":"2","value":"2","key":"","datum":{"type":8003,"variable":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA","description":"Variable"},"type":42},{"defaultValue":"3","value":"4","key":"×","type":42}]},"type":42}]},"type":42}]}],"abilityID":"A7C5A38D-0138-4460-83D6-34A74E9184B5-1057-000001206400607F"},{"createdAt":589130639.34172201,"blocks":[{"block_class":"method","type":53,"description":"Create a Clone of This Object"}],"abilityID":"633AFA92-9257-4042-A37F-8DFA3A3CD550-1057-0000012064028329"},{"blocks":[{"block_class":"method","description":"Set Text","type":40,"parameters":[{"defaultValue":"","value":"","key":"to","datum":{"type":8003,"variable":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","description":"Variable"},"type":53},{"defaultValue":"HSB(306,19,20)","value":"","key":"color","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"100","key":"H","type":42},{"defaultValue":"86","value":"90","key":"S","type":42},{"defaultValue":"96","value":"90","key":"B","type":42}]},"type":44}]}],"createdAt":589131014.75361001,"abilityID":"10BA9FC1-9315-49B9-A66F-8664B2BB81D2-1057-0000012064029CA5"},{"createdAt":589130887.22916496,"blocks":[{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":":    :","key":"to","type":53},{"defaultValue":"HSB(306,19,20)","value":"HSB(0,0,80)","key":"color","type":44}]},{"block_class":"method","type":23,"description":"Move Forward","parameters":[{"defaultValue":"100","value":"-96","key":"","type":42}]},{"block_class":"method","description":"Change Y by","type":28,"parameters":[{"defaultValue":"100","value":"4","key":"","type":42}]}],"abilityID":"69C1E744-FEBC-4E33-ADAC-8933A01F3B24-1057-000001206403204B"},{"createdAt":589130887.22915399,"blocks":[{"description":"Check If Else","controlFalseScript":{"abilityID":"9BD020E4-63D2-4E6C-BDBE-0EFB94552FC5-1057-0000012064033787"},"block_class":"conditionalControl","type":124,"controlScript":{"abilityID":"0BBA8177-0DFD-4EE5-BF16-1A9563FB19B6-1057-00000120640327B4"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1002,"description":"＜","params":[{"defaultValue":"6","value":"","key":"","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"5C2A6454-CC94-45E9-A695-CA0699A95E51-1057-0000012064036C56","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42},{"defaultValue":"7","value":"4","key":"＜","type":42}]},"type":49}]}],"abilityID":"75E3A828-AE81-41ED-AC37-B50CABC2CE4B-1057-0000012064031C1A"},{"createdAt":589130723.62024498,"blocks":[{"block_class":"control","type":121,"description":"Repeat Forever","controlScript":{"abilityID":"2521B81D-83A6-4D3D-B6B2-6368EEDF0253-1057-0000012064033171"}}],"abilityID":"0BBA8177-0DFD-4EE5-BF16-1A9563FB19B6-1057-00000120640327B4"},{"createdAt":589130723.62025499,"blocks":[{"block_class":"method","description":"Move Forward","type":23,"parameters":[{"defaultValue":"100","value":"8","key":"","type":42}]},{"block_class":"control","type":121,"description":"Repeat Forever","controlScript":{"abilityID":"BC77DF0E-A38D-410C-9BB2-B81E78E7F720-1057-0000012064034E11"}}],"abilityID":"9BD020E4-63D2-4E6C-BDBE-0EFB94552FC5-1057-0000012064033787"},{"createdAt":589130976.41701305,"blocks":[{"controlScript":{"abilityID":"F02AA488-2740-4593-AC78-C9D8F9613436-1057-0000012063E5CB2D"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"D24A78DC-8782-4938-B9E3-4DD050FFD5BD-1057-000001206403EB1B","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42},{"defaultValue":"7","value":"2","key":"=","type":42}]},"type":49}],"block_class":"conditionalControl","type":124,"description":"Check If Else","controlFalseScript":{"abilityID":"199E5D19-838B-4A9E-8966-1FFFAE54D5CC-1057-0000012063E60FFA"}}],"abilityID":"2521B81D-83A6-4D3D-B6B2-6368EEDF0253-1057-0000012064033171"},{"createdAt":589130979.38874495,"blocks":[{"type":124,"controlFalseScript":{"abilityID":"55217B66-56BE-4937-B5C4-873A25C4F9A3-1057-0000012063E7F38F"},"block_class":"conditionalControl","description":"Check If Else","controlScript":{"abilityID":"222A6E5F-947C-4B2C-9380-9040A5DD68AC-1057-0000012063E727F9"},"parameters":[{"defaultValue":"","value":"","key":"","datum":{"block_class":"conditionalOperator","type":1000,"description":"=","params":[{"defaultValue":"7","value":"7","key":"","datum":{"HSTraitTypeKey":2006,"HSTraitIDKey":"DA5C3438-3ABC-430D-B575-F33A98D89F8A-1057-000001206404140F","HSTraitObjectParameterTypeKey":8004,"description":"Clone Index"},"type":42},{"defaultValue":"7","value":"4","key":"=","type":42}]},"type":49}]}],"abilityID":"BC77DF0E-A38D-410C-9BB2-B81E78E7F720-1057-0000012064034E11"},{"createdAt":560554540.85996306,"blocks":[{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":"","key":"to","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":42},{"defaultValue":"2","value":"10","key":"%","type":42}]},"type":53},{"defaultValue":"HSB(306,19,20)","value":"","key":"color","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"100","key":"H","type":42},{"defaultValue":"86","value":"90","key":"S","type":42},{"defaultValue":"96","value":"90","key":"B","type":42}]},"type":44}]}],"abilityID":"199E5D19-838B-4A9E-8966-1FFFAE54D5CC-1057-0000012063E60FFA"},{"createdAt":560554540.85995805,"blocks":[{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":"","key":"to","datum":{"block_class":"operator","type":4010,"description":"Absolute Value","params":[{"defaultValue":"-10","value":"-10","key":"","datum":{"block_class":"operator","type":4009,"description":"Round","params":[{"defaultValue":"2.5","value":"2.5","key":"","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","description":"Variable"},"type":42},{"defaultValue":"2","value":"10","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"0.5","key":"−","type":42}]},"type":42}]},"type":42}]},"type":53},{"defaultValue":"HSB(306,19,20)","value":"","key":"color","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"100","key":"H","type":42},{"defaultValue":"86","value":"90","key":"S","type":42},{"defaultValue":"96","value":"90","key":"B","type":42}]},"type":44}]}],"abilityID":"F02AA488-2740-4593-AC78-C9D8F9613436-1057-0000012063E5CB2D"},{"blocks":[{"block_class":"method","type":40,"description":"Set Text","parameters":[{"defaultValue":"","value":"","key":"to","datum":{"block_class":"operator","type":4010,"description":"Absolute Value","params":[{"defaultValue":"-10","value":"-10","key":"","datum":{"block_class":"operator","type":4009,"description":"Round","params":[{"defaultValue":"2.5","value":"2.5","key":"","datum":{"block_class":"operator","type":4001,"description":"−","params":[{"defaultValue":"5","value":"5","key":"","datum":{"block_class":"operator","type":4003,"description":"÷","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":42},{"defaultValue":"2","value":"10","key":"÷","type":42}]},"type":42},{"defaultValue":"2","value":"0.5","key":"−","type":42}]},"type":42}]},"type":42}]},"type":53},{"defaultValue":"HSB(306,19,20)","value":"","key":"color","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"100","key":"H","type":42},{"defaultValue":"86","value":"90","key":"S","type":42},{"defaultValue":"96","value":"90","key":"B","type":42}]},"type":44}]}],"createdAt":560554677.57650006,"abilityID":"222A6E5F-947C-4B2C-9380-9040A5DD68AC-1057-0000012063E727F9"},{"createdAt":560554677.57685399,"blocks":[{"block_class":"method","description":"Set Text","type":40,"parameters":[{"defaultValue":"","value":"","key":"to","datum":{"block_class":"operator","type":4011,"description":"%","params":[{"defaultValue":"5","value":"5","key":"","datum":{"type":8003,"variable":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","description":"Variable"},"type":42},{"defaultValue":"2","value":"10","key":"%","type":42}]},"type":53},{"defaultValue":"HSB(306,19,20)","value":"","key":"color","datum":{"block_class":"operator","type":5002,"description":"HSB","params":[{"defaultValue":"172","value":"100","key":"H","type":42},{"defaultValue":"86","value":"90","key":"S","type":42},{"defaultValue":"96","value":"90","key":"B","type":42}]},"type":44}]}],"abilityID":"55217B66-56BE-4937-B5C4-873A25C4F9A3-1057-0000012063E7F38F"}],"variables":[{"type":8000,"name":"Frames","objectIdString":"28D46291-73DB-4BCC-923B-E9CC70C5BDA3-34757-00036ADE79BCA35F"},{"type":8003,"objectIdString":"67D701D8-EF3B-4542-A702-2E651B9F50D7-2267-00000342CA3B8E2E","name":"Timestamp"},{"name":"Checking #th digit","objectIdString":"00F905CF-7DFB-4D59-BFB8-F1FCA7592DBF-648-00000054F5992E4B","type":8003},{"type":8003,"name":"Check if Timestamp has passed","objectIdString":"B4C21940-925A-4224-B9EA-AF3C49BC934B-648-000000552C3098D9"},{"type":8003,"name":"Timestamp has passed","objectIdString":"21186B9E-CABE-4B39-99F5-EE9E01EA2C8B-648-0000005536856AF1"},{"name":"True","type":8003,"objectIdString":"F4F92F85-C0D0-46D1-B93F-73D2F7F7715D-648-000000554D7D661F"},{"type":8003,"name":"False","objectIdString":"0366ECDC-9184-415E-ADEA-5D221665DF05-648-0000005552F7DA4D"},{"type":8003,"name":"Broken Checkers Actual","objectIdString":"3AFB10F0-8FFD-49E0-86C5-469D17D06CF1-648-00000055B7EA892E"},{"type":8003,"objectIdString":"12A254B0-B714-434F-AE18-34002CC42E40-244-000000022A96C45C","name":"Year"},{"name":"Month","objectIdString":"E48F985E-EFC3-4A01-9C1F-19D55EA6DA4C-244-000000023113C03D","type":8003},{"type":8003,"objectIdString":"7096D348-659A-4BB9-96E6-7D0C940CCE5C-244-000000023AF4B403","name":"Day"},{"type":8003,"objectIdString":"E16BEBB5-3315-4B92-8AA3-1F3BB8FB46DB-244-0000000240BF61B1","name":"Hour"},{"name":"Minute","objectIdString":"2A485C01-FC5F-4965-A248-D98FC86AA476-244-0000000248E9B5A8","type":8003},{"type":8003,"objectIdString":"AAFB6E53-3621-424E-89AB-09081464841B-244-000000024EF984E9","name":"Second"},{"name":"Years","objectIdString":"DEA31B86-55C4-473F-B762-02587CDEE66F-244-0000000549315CF9","type":8003},{"type":8003,"name":"Leap Year Add","objectIdString":"78D88DF8-8EF1-452C-9803-36B17B352144-244-0000000734A5B605"},{"name":"DaysInMonth","objectIdString":"3A3BA912-1717-416A-9270-9D8B32C012FC-244-00000008642E7832","type":8003},{"type":8003,"objectIdString":"AED3DCB3-92AE-440B-AB8C-2B7F1B400956-244-00000008BA43E2A0","name":"Skip month"},{"name":"Finished timestamp","objectIdString":"21DE1B68-8A4E-415D-AC12-7EBE34B3C083-244-00000014A1A37230","type":8003},{"name":"Add from gmt","type":8003,"objectIdString":"85F55794-034A-4209-A786-23194723C938-330-000000173B1F4ABF"},{"name":"Recalculate Datetime","objectIdString":"18651751-0438-4AB3-AE88-8B804486A350-330-00000017EEBE91C8","type":8003},{"name":"Unix + timezone","objectIdString":"E089E882-C6EA-4156-9246-284826BC7D89-330-00000018D48ACF76","type":8003},{"name":"Weekday","objectIdString":"E9088EF5-5549-4D1E-9DA8-EEBB9B5FC7D5-330-0000001E94FEF60C","type":8003},{"type":8003,"objectIdString":"04EF1FE3-751F-42A2-AFF4-F8A7424D0540-399-000000316E032E11","name":"Framerate"},{"name":"ExecTimePerFrame","type":8003,"objectIdString":"29110CE7-8563-4C40-ACD1-26E51F8A4BD1-399-00000031DC1EFCFA"},{"type":8003,"objectIdString":"8A7B0C9A-720C-4A25-9161-E55CF0344D36-399-0000003D0866438C","name":"Broken checkers"}]}