MATCH:
   FIND:
   emoji.base
   REMOVE:
   "/assets"
   ADD:
   "http://d2j12ek52gvmx9.cloudfront.net/emojis/" /*AE_MOD - fix emojis "/assets"*/
   
MATCH:
   FIND:
   d83d-de0e.png
   REMOVE:
   "/assets/d83d-de0e.png"
   ADD:
   "http://d2j12ek52gvmx9.cloudfront.net/emojis/d83d-de0e.png" /*AE_MOD fix emojis but ok cors "/assets/d83d-de0e.png"*/
   
MATCH:
   FIND:
   document.getElementById("project_data")
   COMMENT OUT:
   , i = t.dataset.projectJson || u && u.getAttribute("data");
   ADD:
   var i = JSON.stringify(AE_MOD.projectData); //AE_MOD - This sets the project data
   ***LETTERS MAY VARY***
   
MATCH:
   FIND:
   d2jeqdlsh5ay24.cloudfront.net
   REMOVE:
   return "https://d2jeqdlsh5ay24.cloudfront.net/" + this.name + ".mp3";
   ADD:
        return "https://awesome-e.github.io/hs-tools/play-project/hopscotch-sounds/" /*AE_MOD Self-host sounds  "https://d2jeqdlsh5ay24.cloudfront.net/"*/ + this.name + ".mp3";

MATCH:
   FIND:
   HSBlockType.SetWidthAndHeight
   ADD: (after the last block)
			break;
			
          case HSBlockType.None: //AE_MOD
			if (/^_ae_webplayer_action:/g.test(d[0].value)){
				AE_MOD.webplayer_action(d[0].value.split('_ae_webplayer_action:')[1], ((d[1])?d[1].computedValue(this):undefined));
			}
			break;

MATCH:
   FIND:
   HSBlockType.MathOperatorAdd
   ADD: (BEFORE LINE)
		  case HSBlockType.None: //AE_MOD
			if (/^_ae_webplayer_action:/g.test(this.parameters[0].value)){
				return AE_MOD.webplayer_action(this.parameters[0].value.split('_ae_webplayer_action:')[1], ((this.parameters[1])?this.secondParameterValue(a):undefined));
			}
			return 0;

MATCH:
   FIND:
   .prototype.toggleFullscreen = function() {
   ADD (directly in a.):
   .prototype.resizeScreen = function() { //AE_MOD
		main.resizeRoot(window.innerWidth, window.innerHeight);
    }, 

MATCH:
   FIND:
   this.enterFullscreen --> Then find actual function (which contains var d = b || window.innerWidth, e = c || window.innerHeight;)
   ADD (where a is first argument):
   a = a.parentNode; //AE_MOD Container fullscreen to fix UI touch

MATCH:
   FIND:
   prototype.allSoundNames
   REMOVE (in for loop):
   r.type === h.HSParameterType.Sound && -1 === e.indexOf(r.value) && e.push(r.value);
   ADD:
			//AE_MOD Load multiple sounds
			if (d.type === HSParameterType.Sound && -1 === b.indexOf(d.value)) {
				var isCustom = (!/^((low-|high)?[a-zA-Z](sharp|flat)?|clickPlayable|alert|car|chaChing|check|clang|crash|dash|doorbell|drip|fail|footsteps|laser|pop|schoolBell|spring|vibrate|trophy|aliens|bubbles|crickets|meow|rain|roar|tweet|wind|woof|ahhh|cheer|eating|heartbeat|laugh|news|talking|bass|chord|clap|gong|snare)$/.test(d.value));
				b.push(((isCustom) ? "custom/":"") + d.value);
				if (!isCustom && !!getPref && !getPref("old_sounds") && /^(low-|high)?[a-gA-G](sharp|flat)?$/.test(d.value)) {
					b.push("new/" + d.value, "guitar/" + d.value);
				}
			}

MATCH:
   FIND:
   HSBlockType.PlaySound
   ADD (replace variable letters):

			function notePath (val) {
				//AE_MOD find path of note
				var isCustom = (!/^((low-|high)?[a-zA-Z](sharp|flat)?|clickPlayable|alert|car|chaChing|check|clang|crash|dash|doorbell|drip|fail|footsteps|laser|pop|schoolBell|spring|vibrate|trophy|aliens|bubbles|crickets|meow|rain|roar|tweet|wind|woof|ahhh|cheer|eating|heartbeat|laugh|news|talking|bass|chord|clap|gong|snare)$/.test(val));
				var i = (/^(low-|high)?[a-zA-Z](sharp|flat)?$/.test(val)) ? ({"-1": "", "0": "new/", "1": "guitar/"})[(c[2])?c[2].computedStringValue(b):'0'] : ((isCustom)?"custom/":"");
				return (!isCustom && !!getPref && getPref("old_sounds")) ? "" : i;
			}
   REPLACE e = c[0]... with: var e = notePath(c[0].computedStringValue(b)) + c[0].computedStringValue(b);